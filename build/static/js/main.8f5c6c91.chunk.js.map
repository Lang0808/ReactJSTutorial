{"version":3,"sources":["index.jsx"],"names":["Square","props","winner","className","onClick","value","Board","i","this","squares","winners","nRow","nCol","options","temp","j","push","renderSquare","makeBoard","React","Component","Game","state","Array","fill","history","XIsNext","reverseHistory","numberOfMovesLeft","calculateWinner","setState","concat","lines","length","a","b","c","move","console","log","slice","moves","nextMove","draw","map","step","desc","class","jumpTo","reverse","alert","handleClick","id","reverseH","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8f5c6c91.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { unstable_concurrentAct } from 'react-dom/cjs/react-dom-test-utils.production.min';\nimport './index.css';\n\n\nfunction Square(props){\n    if(props.winner){\n        return <button className=\"win\" onClick={props.onClick}>\n                    {props.value}\n        </button>\n    }\n    return (\n    <button className=\"square\" onClick={props.onClick}>\n        {props.value}\n    </button>\n    );\n}\n\nclass Board extends React.Component{\n    renderSquare(i){\n        return <Square value={this.props.squares[i]}\n                        onClick={()=>this.props.onClick(i)}\n                        winner={this.props.winners[i]}/>\n    }\n    makeBoard(nRow, nCol){\n        const options=[];\n        for(let i=0;i<nRow;i++){\n            const temp=[];\n            for(let j=0;j<nCol;j++){\n                temp.push(this.renderSquare(i*nRow+j));\n            }\n            options.push(<div>{temp}</div>)\n        }\n        return options;\n    }\n    render(){\n        const temp=this.makeBoard(3, 3);\n        return (\n            <div>\n                {temp}\n            </div>\n        )\n    }\n}\n\nclass Game extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            squares: Array(9).fill(null),\n            history : [\n                -1,\n            ],\n            XIsNext: true,\n            reverseHistory: false,\n            winner: Array(9).fill(null),\n            numberOfMovesLeft: 9,\n        }\n    }\n    handleClick(i){\n        const history=this.state.history;\n        const squares=this.state.squares;\n        if(squares[i] || this.calculateWinner(squares)) return;\n        squares[i]=(this.state.XIsNext ? 'X': 'O');\n        this.setState({\n            history: history.concat([\n                i,\n            ]),\n            XIsNext: !this.state.XIsNext,\n            reverseHistory: this.state.reverseHistory,\n            numberOfMovesLeft: this.state.numberOfMovesLeft-1,\n        });\n    }\n    calculateWinner(squares){\n        const lines=[\n            [0, 1, 2],\n            [3, 4, 5],\n            [6, 7, 8],\n            [0, 3, 6],\n            [1, 4, 7],\n            [2, 5, 8],\n            [0, 4, 8],\n            [2, 4, 6],\n        ];\n        //const history=this.state.history;\n        for(let i=0;i<lines.length;i++){\n            let [a, b, c]=lines[i];\n            if(squares[a] && squares[a]==squares[b] && squares[a]==squares[c]) {\n                this.state.winner[a]=1;\n                this.state.winner[b]=1;\n                this.state.winner[c]=1;\n                return squares[a];\n            }\n        }\n        return null;\n    }\n    jumpTo(move){\n        const squares=Array(9).fill(null);\n        console.log(move);\n        \n        const history=this.state.history.slice(0, move+1);\n        console.log(history);\n        for(let i=1;i<history.length;i++){\n            squares[history[i]]=(i%2==1?'X':'O');\n        }\n        this.setState({\n            winner: Array(9).fill(null),\n            history: history,\n            squares: squares,\n            //stepNumber: move,\n            XIsNext: (move%2==0),\n            reverseHistory: this.state.reverseHistory,\n            numberOfMovesLeft: 9-move,\n        });\n    }\n\n    reverseH(){\n        this.setState({\n            reverseHistory: !this.state.reverseHistory,\n        });\n    }\n\n    render(){\n        const squares=this.state.squares;\n        const history=this.state.history;\n        var nextMove=\"Next move: \"+(this.state.XIsNext ? 'X' : 'O');\n        let winner=this.calculateWinner(squares);\n        var draw=null;\n        var moves;\n        moves=history.map((step, move)=>{\n            const desc=move ?\n                        \"Go to move#\"+move :\n                        \"Go to game start\";\n            return (\n                <li key={move}>\n                    <button class=\"btn\"\n                            onClick={()=>this.jumpTo(move)}>\n                        {desc}\n                    </button>\n                </li>\n            )\n        });\n        if(this.state.reverseHistory){\n            moves.reverse();\n        }\n        if(winner){\n            nextMove=\"The winner is \"+winner;\n        }\n        else{\n            draw=(this.state.numberOfMovesLeft==0 ? alert(\"The final result is draw\"): null);\n        }\n        return (\n            <div className=\"game\">\n                <div className=\"game-board\">\n                    <Board squares={squares}\n                            onClick={(i)=>this.handleClick(i)}\n                            winners={this.state.winner}/>\n                </div>\n                <div className=\"info\">{nextMove}</div>\n                <ol id=\"moves\">{moves}</ol>\n                <div>\n                    <button onClick={()=>this.reverseH()}>Reverse History !</button>\n                </div>\n                {draw}\n            </div>\n        )\n        \n    }\n}\n\n// ========================================\n\nReactDOM.render( <Game/> ,document.getElementById('root'));"],"sourceRoot":""}