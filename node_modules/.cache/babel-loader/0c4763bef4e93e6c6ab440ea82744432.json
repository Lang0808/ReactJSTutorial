{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\PRODUCT\\\\Project\\\\tic-tac-toe\\\\src\\\\index.jsx\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { unstable_concurrentAct } from 'react-dom/cjs/react-dom-test-utils.production.min';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Square(props) {\n  if (props.winner) {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"win\",\n      onClick: props.onClick,\n      children: props.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: props.onClick,\n    children: props.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Square;\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return /*#__PURE__*/_jsxDEV(Square, {\n      value: this.props.squares[i],\n      onClick: () => this.props.onClick(i),\n      winner: this.props.winners[i]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 16\n    }, this);\n  }\n\n  makeBoard(nRow, nCol) {\n    const options = [];\n\n    for (let i = 0; i < nRow; i++) {\n      const temp = [];\n\n      for (let j = 0; j < nCol; j++) {\n        temp.push(this.renderSquare(i * nRow + j));\n      }\n\n      options.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        children: temp\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 26\n      }, this));\n    }\n\n    return options;\n  }\n\n  render() {\n    const temp = this.makeBoard(3, 3);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: temp\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      squares: Array(9).fill(null),\n      history: [-1],\n      XIsNext: true,\n      reverseHistory: false,\n      winner: Array(9).fill(null),\n      numberOfMovesLeft: 9\n    };\n  }\n\n  handleClick(i) {\n    const history = this.state.history;\n    const squares = this.state.squares;\n    if (squares[i] || this.calculateWinner(squares)) return;\n    squares[i] = this.state.XIsNext ? 'X' : 'O';\n    this.setState({\n      history: history.concat([i]),\n      XIsNext: !this.state.XIsNext,\n      reverseHistory: this.state.reverseHistory,\n      numberOfMovesLeft: this.state.numberOfMovesLeft - 1\n    });\n  }\n\n  calculateWinner(squares) {\n    const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]]; //const history=this.state.history;\n\n    for (let i = 0; i < lines.length; i++) {\n      let [a, b, c] = lines[i];\n\n      if (squares[a] && squares[a] == squares[b] && squares[a] == squares[c]) {\n        this.state.winner[a] = 1;\n        this.state.winner[b] = 1;\n        this.state.winner[c] = 1;\n        return squares[a];\n      }\n    }\n\n    return null;\n  }\n\n  jumpTo(move) {\n    const squares = Array(9).fill(null);\n    console.log(move);\n    const history = this.state.history.slice(0, move + 1);\n    console.log(history);\n\n    for (let i = 1; i < history.length; i++) {\n      squares[history[i]] = i % 2 == 1 ? 'X' : 'O';\n    }\n\n    this.setState({\n      winner: Array(9).fill(null),\n      history: history,\n      squares: squares,\n      //stepNumber: move,\n      XIsNext: move % 2 == 0,\n      reverseHistory: this.state.reverseHistory,\n      numberOfMovesLeft: 9 - move\n    });\n  }\n\n  reverseH() {\n    this.setState({\n      reverseHistory: !this.state.reverseHistory\n    });\n  }\n\n  render() {\n    const squares = this.state.squares;\n    const history = this.state.history;\n    var nextMove = \"Next move: \" + (this.state.XIsNext ? 'X' : 'O');\n    let winner = this.calculateWinner(squares);\n    var draw = null;\n    var moves;\n    moves = history.map((step, move) => {\n      const desc = move ? \"Go to move#\" + move : \"Go to game start\";\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"btn\",\n          onClick: () => this.jumpTo(move),\n          children: desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this)\n      }, move, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this);\n    });\n\n    if (this.state.reverseHistory) {\n      moves.reverse();\n    }\n\n    if (winner) {\n      nextMove = \"The winner is \" + winner;\n    } else {\n      draw = this.state.numberOfMovesLeft == 0 ? alert(\"The final result is draw\") : null;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: /*#__PURE__*/_jsxDEV(Board, {\n          squares: squares,\n          onClick: i => this.handleClick(i),\n          winners: this.state.winner\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info\",\n        children: nextMove\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n        id: \"moves\",\n        children: moves\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.reverseH(),\n          children: \"Reverse History !\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this), draw]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this);\n  }\n\n} // ========================================\n\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 174,\n  columnNumber: 18\n}, this), document.getElementById('root'));\n\nvar _c;\n\n$RefreshReg$(_c, \"Square\");","map":{"version":3,"sources":["C:/Users/DELL/Desktop/PRODUCT/Project/tic-tac-toe/src/index.jsx"],"names":["React","ReactDOM","unstable_concurrentAct","Square","props","winner","onClick","value","Board","Component","renderSquare","i","squares","winners","makeBoard","nRow","nCol","options","temp","j","push","render","Game","constructor","state","Array","fill","history","XIsNext","reverseHistory","numberOfMovesLeft","handleClick","calculateWinner","setState","concat","lines","length","a","b","c","jumpTo","move","console","log","slice","reverseH","nextMove","draw","moves","map","step","desc","reverse","alert","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { unstable_concurrentAct } from 'react-dom/cjs/react-dom-test-utils.production.min';\nimport './index.css';\n\n\nfunction Square(props){\n    if(props.winner){\n        return <button className=\"win\" onClick={props.onClick}>\n                    {props.value}\n        </button>\n    }\n    return (\n    <button className=\"square\" onClick={props.onClick}>\n        {props.value}\n    </button>\n    );\n}\n\nclass Board extends React.Component{\n    renderSquare(i){\n        return <Square value={this.props.squares[i]}\n                        onClick={()=>this.props.onClick(i)}\n                        winner={this.props.winners[i]}/>\n    }\n    makeBoard(nRow, nCol){\n        const options=[];\n        for(let i=0;i<nRow;i++){\n            const temp=[];\n            for(let j=0;j<nCol;j++){\n                temp.push(this.renderSquare(i*nRow+j));\n            }\n            options.push(<div>{temp}</div>)\n        }\n        return options;\n    }\n    render(){\n        const temp=this.makeBoard(3, 3);\n        return (\n            <div>\n                {temp}\n            </div>\n        )\n    }\n}\n\nclass Game extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            squares: Array(9).fill(null),\n            history : [\n                -1,\n            ],\n            XIsNext: true,\n            reverseHistory: false,\n            winner: Array(9).fill(null),\n            numberOfMovesLeft: 9,\n        }\n    }\n    handleClick(i){\n        const history=this.state.history;\n        const squares=this.state.squares;\n        if(squares[i] || this.calculateWinner(squares)) return;\n        squares[i]=(this.state.XIsNext ? 'X': 'O');\n        this.setState({\n            history: history.concat([\n                i,\n            ]),\n            XIsNext: !this.state.XIsNext,\n            reverseHistory: this.state.reverseHistory,\n            numberOfMovesLeft: this.state.numberOfMovesLeft-1,\n        });\n    }\n    calculateWinner(squares){\n        const lines=[\n            [0, 1, 2],\n            [3, 4, 5],\n            [6, 7, 8],\n            [0, 3, 6],\n            [1, 4, 7],\n            [2, 5, 8],\n            [0, 4, 8],\n            [2, 4, 6],\n        ];\n        //const history=this.state.history;\n        for(let i=0;i<lines.length;i++){\n            let [a, b, c]=lines[i];\n            if(squares[a] && squares[a]==squares[b] && squares[a]==squares[c]) {\n                this.state.winner[a]=1;\n                this.state.winner[b]=1;\n                this.state.winner[c]=1;\n                return squares[a];\n            }\n        }\n        return null;\n    }\n    jumpTo(move){\n        const squares=Array(9).fill(null);\n        console.log(move);\n        \n        const history=this.state.history.slice(0, move+1);\n        console.log(history);\n        for(let i=1;i<history.length;i++){\n            squares[history[i]]=(i%2==1?'X':'O');\n        }\n        this.setState({\n            winner: Array(9).fill(null),\n            history: history,\n            squares: squares,\n            //stepNumber: move,\n            XIsNext: (move%2==0),\n            reverseHistory: this.state.reverseHistory,\n            numberOfMovesLeft: 9-move,\n        });\n    }\n\n    reverseH(){\n        this.setState({\n            reverseHistory: !this.state.reverseHistory,\n        });\n    }\n\n    render(){\n        const squares=this.state.squares;\n        const history=this.state.history;\n        var nextMove=\"Next move: \"+(this.state.XIsNext ? 'X' : 'O');\n        let winner=this.calculateWinner(squares);\n        var draw=null;\n        var moves;\n        moves=history.map((step, move)=>{\n            const desc=move ?\n                        \"Go to move#\"+move :\n                        \"Go to game start\";\n            return (\n                <li key={move}>\n                    <button class=\"btn\"\n                            onClick={()=>this.jumpTo(move)}>\n                        {desc}\n                    </button>\n                </li>\n            )\n        });\n        if(this.state.reverseHistory){\n            moves.reverse();\n        }\n        if(winner){\n            nextMove=\"The winner is \"+winner;\n        }\n        else{\n            draw=(this.state.numberOfMovesLeft==0 ? alert(\"The final result is draw\"): null);\n        }\n        return (\n            <div className=\"game\">\n                <div className=\"game-board\">\n                    <Board squares={squares}\n                            onClick={(i)=>this.handleClick(i)}\n                            winners={this.state.winner}/>\n                </div>\n                <div className=\"info\">{nextMove}</div>\n                <ol id=\"moves\">{moves}</ol>\n                <div>\n                    <button onClick={()=>this.reverseH()}>Reverse History !</button>\n                </div>\n                {draw}\n            </div>\n        )\n        \n    }\n}\n\n// ========================================\n\nReactDOM.render( <Game/> ,document.getElementById('root'));"]},"metadata":{},"sourceType":"module"}